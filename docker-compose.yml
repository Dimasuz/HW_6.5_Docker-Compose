version: '2.13'

volumes:
  pgdata:
  static_volume:
  media_volume:

services:

  web:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/media
    expose:
      - 8000
    env_file:
      - ./.env
    restart: always
    command:
      gunicorn stocks_products.wsgi:application --bind 0.0.0.0:8000 >
    depends_on:
      db:
        condition: service_healthy
    
  db: 
    image: postgres:14-alpine 
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=stocks_products
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGDATA=/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d stocks_products"] 
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    volumes:
      - ./logs:/var/log  
      - pgdata:/var/lib/postgresql/data  
   
  pgadmin: 
    container_name: pgadmin_container
    image: dpage/pgadmin4:5.7
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@yandex.ru"
      PGADMIN_DEFAULT_PASSWORD: "123"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - ./pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped

  nginx:
    build: ./nginx
    ports:
      - 1337:80
    volumes:
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/media
    depends_on:
      - web
